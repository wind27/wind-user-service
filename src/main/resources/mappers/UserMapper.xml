<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wind.auth.model.User">
    <resultMap id="userResultMap" type="com.wind.auth.model.User">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
    </resultMap>

    <insert id="insert" parameterType="com.wind.auth.model.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (username, realname, salt, password,
        status, create_time, update_time,
        mobile, idcard, email
        )
        values (#{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{mobile,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
        )
    </insert>


    <select id="findById" parameterType="long" resultMap="userResultMap">
        select
        id, username, realname, salt, status, create_time, update_time, mobile, idcard, email
        from user
        <where>
            id = #{id}
        </where>
    </select>

    <select id="findByUsername" parameterType="String" resultMap="userResultMap">
        select
        id, username, realname, salt, password, status, create_time, update_time, mobile, idcard, email
        from user
        <where>
            username = #{username}
        </where>
    </select>
</mapper>